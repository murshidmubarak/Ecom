<%- include("../../views/partials/user/header") %>

<main class="container" style="margin-top: 140px; padding-bottom: 60px;">
    <section class="content-main">
        <div class="content-header" style="margin-bottom: 30px;">
            <h2 class="content-title" style="font-size: 2rem; color: #1a1a1a; font-weight: 700;">Payment Failed</h2>
            <p style="color: #6c757d; font-size: 1rem;">Order ID: <strong>#<%= orderId || 'N/A' %></strong></p>
        </div>

        <div class="card" style="border-radius: 10px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); overflow: hidden;">
            <div class="card-body" style="padding: 30px; text-align: center;">
                <h4 style="color: #dc3545; font-weight: 600; margin-bottom: 20px;">
                    <%= errorMessage || 'Payment failed or was cancelled. Please try again.' %>
                </h4>
                <p style="color: #6c757d; font-size: 1rem; margin-bottom: 30px;">
                    Something went wrong with your payment. You can retry the payment or contact support for assistance.
                </p>
                <button class="btn btn-primary" id="retryPaymentBtn" onclick="retryPayment('<%= orderId || '' %>')" style="border-radius: 5px; padding: 10px 20px; font-size: 1rem; transition: background-color 0.2s;">
                    Retry Payment
                </button>
                <a href="/shop" class="btn btn-secondary" style="border-radius: 5px; padding: 10px 20px; font-size: 1rem; margin-left: 10px; transition: background-color 0.2s;">
                    Continue Shopping
                </a>
            </div>
        </div>
    </section>
</main>

<script src="/js/jquery-3.3.1.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
console.log('paymentFailed.ejs loaded at:', new Date().toISOString());
console.log('Order ID:', '<%= orderId || "N/A" %>');

async function retryPayment(orderId) {
    const retryButton = document.getElementById('retryPaymentBtn');
    retryButton.disabled = true;
    retryButton.textContent = 'Processing...';
    console.log('retryPayment: Initiated for orderId:', orderId);

    if (!orderId) {
        console.error('retryPayment: No orderId provided');
        Swal.fire({
            title: "Error",
            text: "No order ID provided for retry payment.",
            icon: "error",
            confirmButtonText: "OK",
            confirmButtonColor: '#3085d6',
            customClass: {
                popup: 'swal2-custom-popup',
                title: 'swal2-custom-title',
                content: 'swal2-custom-content'
            }
        }).then(() => {
            retryButton.disabled = false;
            retryButton.textContent = 'Retry Payment';
        });
        return;
    }

    if (typeof Razorpay === 'undefined') {
        console.error('retryPayment: Razorpay script not loaded');
        Swal.fire({
            title: "Error",
            text: "Payment gateway not loaded. Please try again later.",
            icon: "error",
            confirmButtonText: "OK",
            confirmButtonColor: '#3085d6',
            customClass: {
                popup: 'swal2-custom-popup',
                title: 'swal2-custom-title',
                content: 'swal2-custom-content'
            }
        }).then(() => {
            retryButton.disabled = false;
            retryButton.textContent = 'Retry Payment';
        });
        return;
    }

    try {
        const response = await $.ajax({
            url: `/retryPayment?orderId=${orderId}`,
            method: "GET",
            contentType: "application/json",
            headers: {
                'X-CSRF-Token': '<%= csrfToken || "" %>'
            }
        });
        console.log('retryPayment: Response received', response);

        if (response.payment && response.method === "razorpay") {
            const options = {
                key: response.key,
                amount: response.amount,
                currency: "INR",
                name: "Male Fashion",
                description: "Retry Order Payment",
                order_id: response.razorpayOrderId,
                handler: async function (razorpayResponse) {
                    try {
                        console.log('retryPayment: Razorpay payment response', razorpayResponse);
                        const verifyResponse = await $.ajax({
                            url: "/verifyPayment",
                            method: "POST",
                            contentType: "application/json",
                            headers: {
                                'X-CSRF-Token': '<%= csrfToken || "" %>'
                            },
                            data: JSON.stringify({
                                orderId: response.orderId,
                                razorpay_payment_id: razorpayResponse.razorpay_payment_id,
                                razorpay_order_id: razorpayResponse.razorpay_order_id,
                                razorpay_signature: razorpayResponse.razorpay_signature
                            })
                        });

                        if (verifyResponse.success) {
                            console.log('retryPayment: Payment verified, orderId:', verifyResponse.orderId);
                            await clearCart();
                            // Replace the payment failure page in history with order details
                            history.replaceState(null, '', `/orderDetails?id=${verifyResponse.orderId}`);
                            Swal.fire({
                                title: "Payment Success",
                                text: "Order placed successfully",
                                icon: "success",
                                showCancelButton: true,
                                confirmButtonText: "View Order",
                                cancelButtonText: "Continue Shopping",
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#6c757d',
                                customClass: {
                                    popup: 'swal2-custom-popup',
                                    title: 'swal2-custom-title',
                                    content: 'swal2-custom-content'
                                }
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    console.log('retryPayment: Redirecting to order details for orderId:', verifyResponse.orderId);
                                    window.location.href = `/orderDetails?id=${verifyResponse.orderId}`;
                                } else {
                                    console.log('retryPayment: Redirecting to shop');
                                    window.location.href = "/shop";
                                }
                            });
                        } else {
                            console.log('retryPayment: Payment verification failed', verifyResponse);
                            await changeStatus({ orderId: response.orderId, status: 'failed' });
                            window.location.href = `/paymentFailed?orderId=${response.orderId}`;
                        }
                    } catch (error) {
                        console.error("retryPayment: Payment verification error:", error);
                        await changeStatus({ orderId: response.orderId, status: 'failed' });
                        window.location.href = `/paymentFailed?orderId=${response.orderId}`;
                    }
                },
                prefill: {
                    name: "<%= user && user.name ? user.name : '' %>",
                    email: "<%= user && user.email ? user.email : '' %>",
                    contact: "<%= userAddress && userAddress.address && userAddress.address.length > 0 ? userAddress.address[0].phone : '' %>"
                },
                theme: {
                    color: "#111111"
                },
                modal: {
                    ondismiss: async function () {
                        console.log("retryPayment: Razorpay modal closed by user, orderId:", response.orderId);
                        await changeStatus({ orderId: response.orderId, status: 'failed' });
                        window.location.href = `/paymentFailed?orderId=${response.orderId}`;
                    }
                }
            };

            const rzp = new Razorpay(options);
            rzp.on('payment.failed', async function (razorpayResponse) {
                console.error("retryPayment: Razorpay payment failed:", razorpayResponse.error, "orderId:", response.orderId);
                await changeStatus({ orderId: response.orderId, status: 'failed' });
                window.location.href = `/paymentFailed?orderId=${response.orderId}`;
            });
            rzp.open();
        } else {
            console.log('retryPayment: Invalid response', response);
            Swal.fire({
                title: "Error",
                text: response.error || "Unable to initiate payment retry.",
                icon: "error",
                confirmButtonText: "OK",
                confirmButtonColor: '#3085d6',
                customClass: {
                    popup: 'swal2-custom-popup',
                    title: 'swal2-custom-title',
                    content: 'swal2-custom-content'
                }
            }).then(() => {
                retryButton.disabled = false;
                retryButton.textContent = 'Retry Payment';
            });
        }
    } catch (error) {
        console.error('retryPayment: Error', error);
        Swal.fire({
            title: "Error",
            text: error.responseJSON?.error || "Failed to retry payment. Please try again.",
            icon: "error",
            confirmButtonText: "OK",
            confirmButtonColor: '#3085d6',
            customClass: {
                popup: 'swal2-custom-popup',
                title: 'swal2-custom-title',
                content: 'swal2-custom-content'
            }
        }).then(() => {
            retryButton.disabled = false;
            retryButton.textContent = 'Retry Payment';
        });
    }
}

async function clearCart() {
    try {
        console.log('clearCart: Attempting to clear cart for user:', '<%= user && user._id ? user._id : "N/A" %>');
        await $.ajax({
            url: "/clearCart",
            method: "POST",
            contentType: "application/json",
            headers: {
                'X-CSRF-Token': '<%= csrfToken || "" %>'
            },
            data: JSON.stringify({
                userId: '<%= user && user._id ? user._id : "" %>'
            })
        });
        console.log('clearCart: Cart cleared successfully');
    } catch (error) {
        console.error('clearCart: Error clearing cart:', error);
    }
}

async function changeStatus(params) {
    try {
        console.log('changeStatus: Sending request with params:', params);
        await $.ajax({
            url: "/changeOrderStatus",
            method: "POST",
            contentType: "application/json",
            headers: {
                'X-CSRF-Token': '<%= csrfToken || "" %>'
            },
            data: JSON.stringify(params)
        });
        console.log('changeStatus: Status updated successfully');
    } catch (error) {
        console.error('changeStatus: Error updating status:', error);
    }
}
</script>

<%- include("../../views/partials/user/footer") %>