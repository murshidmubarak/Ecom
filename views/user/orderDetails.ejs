<%- include("../../views/partials/user/header") %>

<main class="container" style="margin-top: 140px; padding-bottom: 60px;">
    <section class="content-main">
        <div class="content-header" style="margin-bottom: 30px;">
            <h2 class="content-title" style="font-size: 2rem; color: #1a1a1a; font-weight: 700;">Order Details</h2>
            <p style="color: #6c757d; font-size: 1rem;">Order ID: <strong>#<%= orders.orderId || orders._id %></strong></p>
        </div>

        <div class="card" style="border-radius: 10px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); overflow: hidden;">
            <div class="card-body" style="padding: 30px;">
                <!-- Order Info Section -->
                <div class="row order-info-wrap" style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 30px;">
                    <div class="col-md-4 mb-4">
                        <article class="icontext d-flex align-items-start">
                            <span class="icon icon-sm rounded-circle" style="background-color: #007bff; color: #fff; width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; margin-right: 15px;">
                                <i class="material-icons">person</i>
                            </span>
                            <div class="text">
                                <h6 class="mb-2" style="font-size: 1.1rem; color: #1a1a1a;">Customer</h6>
                                <% if (orders.address) { %>
                                    <p class="mb-0" style="color: #6c757d; font-size: 0.95rem;">
                                        <%= orders.address.name %><br>
                                        <%= orders.address.phone %>
                                    </p>
                                <% } else { %>
                                    <p class="mb-0" style="color: #6c757d; font-size: 0.95rem;">Address not available</p>
                                <% } %>
                            </div>
                        </article>
                    </div>
                    <div class="col-md-4 mb-4">
                        <article class="icontext d-flex align-items-start">
                            <span class="icon icon-sm rounded-circle" style="background-color: #007bff; color: #fff; width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; margin-right: 15px;">
                                <i class="material-icons">local_shipping</i>
                            </span>
                            <div class="text">
                                <h6 class="mb-2" style="font-size: 1.1rem; color: #1a1a1a;">Order Info</h6>
                                <p class="mb-0" style="color: #6c757d; font-size: 0.95rem;">
                                    Pay Method: <strong><%= orders.payment.charAt(0).toUpperCase() + orders.payment.slice(1) %></strong><br>
                                    Order Status: <strong><%= orders.status.charAt(0).toUpperCase() + orders.status.slice(1) %></strong><br>
                                    <% if (orders.payment === 'cod') { %>
                                        Payment Status: <strong><%= orders.status === 'delivered' ? 'Successful' : 'Pending' %></strong><br>
                                    <% } else if (orders.payment === 'wallet') { %>
                                        Payment Status: <strong>Successful</strong><br>
                                    <% } else if (orders.payment === 'online' || orders.payment === 'failed') { %>
                                        Payment Status: <strong><%= (orders.status === 'confirmed' || orders.status === 'delivered') ? 'Successful' : 'Pending' %></strong><br>
                                    <% } %>
                                    Grand Total: <strong>₹<%= totalGrant.toLocaleString() %></strong><br>
                                    Paid Amount: <strong>₹<%= (totalPrice).toLocaleString() %></strong><br>
                                    Discount: <strong>₹<%= (totalGrant - totalPrice).toLocaleString() %></strong><br>
                                    Final Amount: <strong>₹<%= finalAmount.toLocaleString() %></strong>
                                </p>
                            </div>
                        </article>
                    </div>
                    <div class="col-md-4 mb-4">
                        <article class="icontext d-flex align-items-start">
                            <span class="icon icon-sm rounded-circle" style="background-color: #007bff; color: #fff; width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; margin-right: 15px;">
                                <i class="material-icons">place</i>
                            </span>
                            <div class="text">
                                <h6 class="mb-2" style="font-size: 1.1rem; color: #1a1a1a;">Deliver To</h6>
                                <% if (orders.address) { %>
                                    <p class="mb-2" style="color: #6c757d; font-size: 0.95rem;">
                                        <%= orders.address.landMark %>, <%= orders.address.city %><br>
                                        <%= orders.address.state %>, <%= orders.address.addressType %><br>
                                        <%= orders.address.pincode %>
                                    </p>
                                <% } else { %>
                                    <p class="mb-2" style="color: #6c757d; font-size: 0.95rem;">Address not available</p>
                                <% } %>
                                <% if (orders.status === 'delivered' || orders.status === 'Delivered') { %>
                                    <a href="/downloadInvoice/<%= orders._id %>" class="btn btn-sm" style="background-color: #007bff; color: #fff; border-radius: 5px; padding: 6px 12px; transition: background-color 0.2s;">
                                        <i class="material-icons" style="vertical-align: middle;">file_download</i> Download Invoice
                                    </a>
                                <% } %>
                            </div>
                        </article>
                    </div>
                </div>

                <!-- Action Buttons -->
                <% if (orders.status === 'confirmed' || (orders.payment === 'failed' && orders.status === 'pending')) { %>
                    <div style="margin-bottom: 20px;">
                        <% if (orders.payment === 'failed' && orders.status === 'pending') { %>
                            <button class="btn btn-sm btn-primary" onclick="retryPayment('<%= orders.orderId %>')" style="border-radius: 5px; padding: 6px 12px; transition: background-color 0.2s; margin-right: 10px;">Retry Payment</button>
                        <% } %>
                        <% if (orders.status === 'confirmed') { %>
                            <button class="btn btn-sm btn-danger" onclick="confirmCancelOrder('<%= orders._id %>')" style="border-radius: 5px; padding: 6px 12px; transition: background-color 0.2s;">Cancel Order</button>
                        <% } %>
                    </div>
                <% } %>

                <!-- Order Items Table -->
                <div class="table-responsive">
                    <table class="table" style="border-collapse: separate; border-spacing: 0; background-color: #fff; border-radius: 8px; overflow: hidden;">
                        <thead style="background-color: #f1f3f5; color: #1a1a1a;">
                            <tr class="text-center">
                                <th style="padding: 15px; font-weight: 600;">Product</th>
                                <th style="padding: 15px; font-weight: 600;">Name</th>
                                <th style="padding: 15px; font-weight: 600;">Unit Price</th>
                                <th style="padding: 15px; font-weight: 600;">Quantity</th>
                                <th style="padding: 15px; font-weight: 600;">Total</th>
                                <th style="padding: 15px; font-weight: 600;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (orders && orders.orderedItems) { %>
                                <% orders.orderedItems.forEach((item) => { %>
                                    <tr style="border-bottom: 1px solid #e9ecef;">
                                        <td class="text-center" style="padding: 20px;">
                                            <a href="#" class="itemside d-flex justify-content-center">
                                                <img src="/Uploads/<%= item.product.productImage[0] %>" style="width: 80px; height: 80px; object-fit: cover; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" alt="<%= item.product.productName %>">
                                            </a>
                                        </td>
                                        <td class="text-center" style="padding: 20px;">
                                            <div class="info" style="font-weight: 500; color: #1a1a1a;">
                                                <%= item.product.productName || item.product.name || "Product" %>
                                            </div>
                                        </td>
                                        <td class="text-center" style="padding: 20px; color: #6c757d;">
                                            ₹<%= item.price.toLocaleString() %>
                                        </td>
                                        <td class="text-center" style="padding: 20px; color: #6c757d;">
                                            <%= item.quantity %>
                                        </td>
                                        <td class="text-center" style="padding: 20px; color: #1a1a1a; font-weight: 500;">
                                            ₹<%=(item.price * item.quantity).toLocaleString() %>
                                        </td>
                                        <td class="text-center" style="padding: 20px;">
                                            <% if (item.productStatus === "cancelled" || item.productStatus === "returned") { %>
                                                <span style="color: #6c757d; font-style: italic;"><%= item.productStatus.charAt(0).toUpperCase() + item.productStatus.slice(1) %></span>
                                            <% } else if (item.productStatus === "return-requested") { %>
                                                <span style="color: #facc15; font-style: italic;">Return Requested</span>
                                            <% } else if (item.productStatus === "return-rejected") { %>
                                                <span style="color: #991b1b; font-style: italic;">Return Rejected</span>
                                            <% } else { %>
                                                <% if (orders.status === "confirmed") { %>
                                                    <button class="btn btn-sm btn-warning" onclick="confirmCancelSingleProduct('<%= orders._id %>', '<%= item.product._id %>')" style="border-radius: 5px; padding: 6px 12px; transition: background-color 0.2s;">Cancel Product</button>
                                                <% } else if (orders.status === "shipped" || orders.status === "delivered") { %>
                                                    <button class="btn btn-sm btn-warning" onclick="showReturnModal('<%= orders._id %>', '<%= item.product._id %>')" style="border-radius: 5px; padding: 6px 12px; transition: background-color 0.2s;">Request Return</button>
                                                <% } %>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" style="text-align: center; padding: 30px; color: #6c757d;">No items found in this order</td>
                                </tr>
                            <% } %>
                            <input type="hidden" id="orderId" value="<%= orders._id %>">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>

    <!-- Return Request Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="returnModalLabel">Request Return</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Please provide the reason for returning this product:</p>
                    <textarea id="returnReason" class="form-control" rows="4" placeholder="Enter return reason" required></textarea>
                    <input type="hidden" id="modalOrderId">
                    <input type="hidden" id="modalProductId">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitReturnRequest()">Submit Return</button>
                </div>
            </div>
        </div>
    </div>
</main>

<script src="/js/jquery-3.3.1.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
console.log('orderDetails.ejs loaded at:', new Date().toISOString());
console.log('Order ID:', '<%= orders.orderId %>');
console.log('Order Status:', '<%= orders.status %>');
console.log('Payment Status:', '<%= orders.payment %>');

function confirmCancelOrder(orderId) {
    if (confirm('Are you sure you want to cancel this entire order?')) {
        cancelOrder(orderId);
    }
}

function cancelOrder(orderId) {
    $.ajax({
        url: '/cancelOrder',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ orderId: orderId }),
        success: (response) => {
            if (response.message === "Order cancelled successfully") {
                alert('The entire order has was cancelled successfully.');
                window.location.reload();
            }
        },
        error: (error) => {
            alert("Error cancelling order: " + (error.responseJSON?.message || error.responseText));
        }
    });
}

async function retryPayment(orderId) {
    console.log('retryPayment: Initiated for orderId:', orderId);
    try {
        const response = await $.ajax({
            url: `/retryPayment?orderId=${orderId}`,
            method: "GET",
            contentType: "application/json"
        });
        console.log('retryPayment: Response received', response);

        if (response.payment && response.method === "razorpay") {
            const options = {
                key: response.key,
                amount: response.amount,
                currency: "INR",
                name: "Male Fashion",
                description: "Retry Order Payment",
                order_id: response.razorpayOrderId,
                handler: async function (razorpayResponse) {
                    try {
                        console.log('retryPayment: Razorpay payment response', razorpayResponse);
                        const verifyResponse = await $.ajax({
                            url: "/verifyPayment",
                            method: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({
                                orderId: response.orderId,
                                razorpay_payment_id: razorpayResponse.razorpay_payment_id,
                                razorpay_order_id: razorpayResponse.razorpay_order_id,
                                razorpay_signature: razorpayResponse.razorpay_signature,
                            })
                        });

                        if (verifyResponse.success) {
                            console.log('retryPayment: Payment verified, orderId:', verifyResponse.orderId);
                            await clearCart();
                            alert("Order placed successfully");
                            location.href = `/orderDetails?id=${verifyResponse.orderId}`;
                        } else {
                            console.log('retryPayment: Payment verification failed', verifyResponse);
                            await changeStatus({ orderId: response.orderId, status: 'failed' });
                            location.href = `/paymentFailed?orderId=${response.orderId}`;
                        }
                    } catch (error) {
                        console.error("retryPayment: Payment verification error:", error);
                        await changeStatus({ orderId: response.orderId, status: 'failed' });
                        location.href = `/paymentFailed?orderId=${response.orderId}`;
                    }
                },
                prefill: {
                    name: "<%= orders.address.name %>",
                    email: "<%= user.email %>",
                    contact: "<%= orders.address.phone %>"
                },
                theme: {
                    color: "#111111",
                },
                modal: {
                    ondismiss: async function () {
                        console.log("retryPayment: Razorpay modal closed by user, orderId:", response.orderId);
                        await changeStatus({ orderId: response.orderId, status: 'failed' });
                        location.href = `/paymentFailed?orderId=${response.orderId}`;
                    }
                }
            };

            const rzp = new Razorpay(options);
            rzp.on('payment.failed', async function (razorpayResponse) {
                console.error("retryPayment: Razorpay payment failed:", razorpayResponse.error, "orderId:", response.orderId);
                await changeStatus({ orderId: response.orderId, status: 'failed' });
                location.href = `/paymentFailed?orderId=${response.orderId}`;
            });
            rzp.open();
        } else {
            console.log('retryPayment: Invalid response', response);
            alert("Unable to initiate payment retry.");
        }
    } catch (error) {
        console.error('retryPayment: Error', error);
        alert(error.responseJSON?.error || "Failed to retry payment.");
    }
}

function showReturnModal(orderId, singleProductId) {
    $('#modalOrderId').val(orderId);
    $('#modalProductId').val(singleProductId);
    $('#returnReason').val('');
    $('#returnModal').modal('show');
}

function submitReturnRequest() {
    const orderId = $('#modalOrderId').val();
    const singleProductId = $('#modalProductId').val();
    const returnReason = $('#returnReason').val().trim();

    if (!returnReason) {
        alert('Please provide a reason for the return.');
        return;
    }

    returnSingleProduct(orderId, singleProductId, returnReason);
}

function returnSingleProduct(orderId, singleProductId, returnReason) {
    $.ajax({
        url: '/returnSingleProduct',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ orderId: orderId, singleProductId: singleProductId, returnReason: returnReason }),
        success: (response) => {
            if (response.message === "Return request submitted to admin for approval") {
                alert('Your return request has been submitted to the admin for approval.');
                $('#returnModal').modal('hide');
                window.location.reload();
            }
        },
        error: (error) => {
            alert("Error submitting return request: " + (error.responseJSON?.message || error.responseText));
        }
    });
}

function confirmCancelSingleProduct(orderId, singleProductId) {
    if (confirm('Are you sure you want to cancel this product?')) {
        cancelSingleProduct(orderId, singleProductId);
    }
}

function cancelSingleProduct(orderId, singleProductId) {
    $.ajax({
        url: '/cancelSingleProduct',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ orderId: orderId, singleProductId: singleProductId }),
        success: (response) => {
            if (response.message === "All products cancelled, order status updated to cancelled") {
                alert('All products in this order have been cancelled, and the order status is now cancelled.');
                window.location.reload();
            } else if (response.message === "Product status updated successfully") {
                alert('The product has been cancelled successfully.');
                window.location.reload();
            }
        },
        error: (error) => {
            alert("Error cancelling product: " + (error.responseJSON?.message || error.responseText));
        }
    });
}

async function clearCart() {
    try {
        console.log('clearCart: Attempting to clear cart for user:', '<%= user._id %>');
        await $.ajax({
            url: "/clearCart",
            method: "POST",
            contentType: "application/json",
            data: JSON.stringify({
                userId: '<%= user._id %>'
            })
        });
        console.log('clearCart: Cart cleared successfully');
    } catch (error) {
        console.error('clearCart: Error clearing cart:', error);
    }
}

async function changeStatus(params) {
    try {
        console.log('changeStatus: Sending request with params:', params);
        await $.ajax({
            url: "/changeOrderStatus",
            method: "POST",
            contentType: "application/json",
            data: JSON.stringify(params)
        });
        console.log('changeStatus: Status updated successfully');
    } catch (error) {
        console.error('changeStatus: Error updating status:', error);
    }
}
</script>

<%- include("../../views/partials/user/footer") %>