<%- include("../../views/partials/user/header") %>

<style>
/* Main Container */
.main-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  width: 100%;
  box-sizing: border-box;
  margin-top: 120px;
  background-color: #f8f9fa;
}

/* Shop Topbar */
.shop-topbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 25px;
  flex-wrap: wrap;
  width: 100%;
  background-color: #fff;
  padding: 15px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

/* Search Form */
.search-form {
  display: flex;
  align-items: center;
  background-color: #fff;
  border-radius: 25px;
  overflow: hidden;
  width: 100%;
  max-width: 320px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.search-input {
  flex: 1;
  padding: 12px 15px;
  font-size: 14px;
  border: none;
  outline: none;
  background-color: transparent;
}

.search-button {
  padding: 12px 25px;
  background-color: #1e918b;
  color: #fff;
  border: none;
  cursor: pointer;
  font-size: 14px;
  border-radius: 0 25px 25px 0;
  transition: background-color 0.3s;
}

.search-button:hover {
  background-color: #166d68;
}

/* Sort Options */
.sort-options {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  width: 100%;
  justify-content: flex-end;
}

.sort-options a {
  text-decoration: none;
  padding: 8px 15px;
  background-color: #fff;
  border: 1px solid #e0e0e0;
  color: #444;
  border-radius: 5px;
  transition: all 0.3s;
  font-size: 13px;
}

.sort-options a:hover {
  background-color: #f5f5f5;
  border-color: #007bff;
}

.sort-options a.active {
  background-color: #007bff;
  color: #fff;
  border-color: #007bff;
}

/* Product List Container */
.product-list-container {
  display: flex;
  gap: 25px;
  width: 100%;
}

/* Sidebar */
.sidebar {
  padding: 20px;
  border: 1px solid #e0e0e0;
  background-color: #fff;
  border-radius: 8px;
  width: 240px;
  flex-shrink: 0;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

.filter-section {
  margin-bottom: 25px;
}

.filter-title {
  font-weight: 600;
  margin-bottom: 12px;
  font-size: 16px;
  color: #222;
  padding-bottom: 8px;
  border-bottom: 1px solid #eee;
}

.filter-item {
  margin: 6px 0;
  list-style-type: none;
}

.filter-item a {
  text-decoration: none;
  color: #444;
  display: block;
  padding: 8px 12px;
  font-size: 14px;
  border-radius: 4px;
  transition: all 0.2s;
}

.filter-item a:hover {
  color: #007bff;
  background-color: #f8f9fa;
}

.filter-item a.active {
  color: #007bff;
  background-color: #f0f5ff;
  font-weight: 500;
}

/* Category Brand Container */
.category-brand-container ul {
  padding: 0;
  list-style-type: none;
  display: flex;
  flex-direction: column;
  gap: 4px;
  margin: 0;
}

/* Price Filter */
.price-filter .price-options {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.price-button {
  padding: 8px 15px;
  background-color: #fff;
  color: #444;
  border: 1px solid #e0e0e0;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s;
  text-decoration: none;
  display: block;
  font-size: 13px;
}

.price-button:hover {
  background-color: #007bff;
  color: white;
  border-color: #007bff;
}

.price-button.active {
  background-color: #007bff;
  color: white;
  border-color: #007bff;
}

/* Product Grid */
.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 20px;
  flex: 1;
}

/* Product Card */
.product-card {
  border: 1px solid #e0e0e0;
  padding: 15px;
  border-radius: 8px;
  text-align: center;
  transition: all 0.3s;
  height: 320px;
  display: flex;
  flex-direction: column;
  background-color: #fff;
  position: relative;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

.product-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.product-card img {
  width: 100%;
  height: 150px;
  object-fit: contain;
  border-radius: 5px;
  margin-bottom: 12px;
}

.product-card a {
  text-decoration: none;
  color: #333;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.product-card h4 {
  margin: 0 0 8px;
  font-size: 15px;
  line-height: 1.3;
  height: 40px;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.product-card p {
  margin: 0 0 12px;
  font-size: 14px;
  color: #666;
}

.wishlist-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: #fff;
  padding: 5px;
  border-radius: 50%;
  cursor: pointer;
  font-size: 16px;
  border: 1px solid #eee;
  transition: all 0.2s;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.wishlist-btn:hover {
  background-color: #f8f9fa;
  border-color: #ff4444;
  transform: scale(1.1);
}

.wishlist-btn.in-wishlist {
  color: #ff4444;
  background-color: #ffebee;
  border-color: #ff4444;
}

.wishlist-btn.not-in-wishlist {
  color: #ccc;
  background-color: #fff;
  border-color: #eee;
}

.add-to-cart-btn {
  background-color: #46698f;
  color: #fff;
  padding: 10px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  width: 100%;
  transition: all 0.3s;
  font-size: 14px;
}

.add-to-cart-btn:hover {
  background-color: #385777;
}

/* No Products */
.no-products {
  width: 100%;
  text-align: center;
  padding: 50px 0;
  color: #666;
  font-size: 18px;
  background-color: #fff;
  border-radius: 8px;
  margin: 20px 0;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin: 25px 0;
  flex-wrap: wrap;
}

.pagination a {
  padding: 8px 14px;
  background-color: #fff;
  border: 1px solid #e0e0e0;
  color: #444;
  text-decoration: none;
  transition: all 0.3s;
  border-radius: 5px;
  font-size: 13px;
}

.pagination a:hover {
  background-color: #f5f5f5;
  border-color: #007bff;
}

.pagination .active {
  background-color: #007bff;
  color: #fff;
  border-color: #007bff;
}

/* Responsive Styles */
@media (max-width: 1024px) {
  .product-list-container {
    flex-direction: column;
  }
  
  .sidebar {
    width: 100%;
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
  }
}

@media (max-width: 768px) {
  .main-container {
    padding: 15px;
    margin-top: 100px;
  }
  
  .shop-topbar {
    flex-direction: column;
    gap: 15px;
    padding: 10px;
  }
  
  .search-form {
    max-width: 100%;
  }
  
  .sort-options {
    justify-content: center;
  }
  
  .product-card {
    height: 300px;
  }
  
  .product-card img {
    height: 140px;
  }
}

@media (max-width: 480px) {
  .product-card {
    height: 280px;
  }
  
  .product-card img {
    height: 120px;
  }
  
  .add-to-cart-btn {
    padding: 8px;
    font-size: 13px;
  }
  
  .search-input {
    padding: 10px;
  }
  
  .search-button {
    padding: 10px 20px;
  }
  
  .sidebar {
    padding: 15px;
    grid-template-columns: 1fr;
  }
}

@media (max-width: 350px) {
  .search-form {
    flex-direction: column;
    background: none;
    box-shadow: none;
    max-width: 100%;
  }
  
  .search-input {
    width: 100%;
    padding: 10px;
    border-radius: 5px;
    background-color: #fff;
    margin-bottom: 8px;
    border: 1px solid #e0e0e0;
  }
  
  .search-button {
    width: 100%;
    border-radius: 5px;
    padding: 10px;
  }
  
  .sort-options a {
    padding: 6px 12px;
    font-size: 12px;
  }
}
</style>

<div class="main-container">
  <meta name="csrf-token" content="<%= csrfToken %>">
  <section class="shop-page container">
    <div class="shop-topbar">
      <div class="search-bar">
        <form action="/shop" method="GET" class="search-form">
          <input type="text" name="search" placeholder="Search items..." class="search-input" />
          <button type="submit" class="search-button">Search</button>
          <% if(selectedCategory && selectedCategory !== 'all') { %>
            <input type="hidden" name="category" value="<%= selectedCategory %>" />
          <% } %>
          <% if(selectedPrice && selectedPrice !== 'all') { %>
            <input type="hidden" name="price" value="<%= selectedPrice %>" />
          <% } %>
          <% if(selectedSort && selectedSort !== 'newest') { %>
            <input type="hidden" name="sort" value="<%= selectedSort %>" />
          <% } %>
        </form>
      </div>
      <!-- Sort options moved inside topbar -->
      <div class="sort-options">
        <% for(let i = 0; i < sortLinks.length; i++) { %>
          <a href="<%= sortLinks[i].link %>" class="<%= selectedSort === sortLinks[i].id ? 'active' : '' %>">
            <%= sortLinks[i].name %>
          </a>
        <% } %>
      </div>
    </div>

    <div class="product-list-container">
      <aside class="sidebar">
        <div class="filter-section">
          <div class="filter-title">Categories</div>
          <div class="category-brand-container">
            <ul>
              <li class="filter-item">
                <a href="/shop" class="<%= selectedCategory === 'all' ? 'active' : '' %>">All Categories</a>
              </li>
              <% for(let i = 0; i < categoriesWithLinks.length; i++) { %>
                <li class="filter-item">
                  <a href="<%= categoriesWithLinks[i].link %>" class="<%= selectedCategory === categoriesWithLinks[i]._id.toString() ? 'active' : '' %>">
                    <%= categoriesWithLinks[i].name %>
                  </a>
                </li>
              <% } %>
            </ul>
          </div>
        </div>
 
        <div class="filter-section">
          <div class="filter-title">Filter by Price</div>
          <div class="price-options">
            <% for(let i = 0; i < priceFilters.length; i++) { %>
              <a href="<%= priceFilters[i].link %>" class="price-button <%= selectedPrice === priceFilters[i].id ? 'active' : '' %>">
                <%= priceFilters[i].name %>
              </a>
            <% } %>
          </div>
        </div>
      </aside>
 
      <main class="product-grid">
        <% if(products.length > 0) { %>
          <% for(let i = 0; i < products.length; i++) { %>
            <div class="product-card">
              <!-- Updated wishlist button with conditional styling -->
              <span class="wishlist-btn <%= products[i].isInWishlist ? 'in-wishlist' : 'not-in-wishlist' %>" 
                    onclick="toggleWishlist('<%= products[i]._id %>', this)">
                <% if (products[i].isInWishlist) { %>
                  ❤️
                <% } else { %>
                  🤍
                <% } %>
              </span>
              <a href="/productDetails?id=<%= products[i]._id %>">
                <img src="/uploads/<%= products[i].productImage[0]%>" alt="<%= products[i].productName %>" />
                <h4><%= products[i].productName %></h4>
                <p>Price: ₹<%= products[i].salePrice %> <span class="text-muted"><strike>₹<%= products[i].regularPrice %></strike></span></p>
              </a>
              <button class="add-to-cart-btn" onclick="addToCart('<%= products[i]._id %>')">Add to Cart</button>
            </div>
          <% } %>
        <% } else { %>
          <div class="no-products">
            <p>No products found matching your criteria.</p>
          </div>
        <% } %>
      </main>
    </div>
 
    <% if(totalPages > 1) { %>
      <div class="pagination">
        <% if (prevPageLink) { %>
          <a href="<%= prevPageLink %>">Prev</a>
        <% } %>
        <% for(let i = 0; i < paginationLinks.length; i++) { %>
          <a href="<%= paginationLinks[i].link %>" class="<%= paginationLinks[i].active ? 'active' : '' %>">
            <%= paginationLinks[i].pageNumber %>
          </a>
        <% } %>
        <% if (nextPageLink) { %>
          <a href="<%= nextPageLink %>">Next</a>
        <% } %>
      </div>
    <% } %>
  </section>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

  const isUserLoggedIn = <%- locals.user ? 'true' : 'false' %>;

async function addToCart(productId) {
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

    if (!isUserLoggedIn) {
        Swal.fire({
            icon: 'warning',
            title: 'Not Logged In',
            text: 'Please log in to add items to your cart.',
            showCancelButton: true,
            confirmButtonText: 'Log In',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/login';
            }
        });
        return;
    }

    try {
        const response = await fetch('/addToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'CSRF-Token': csrfToken
            },
            body: JSON.stringify({ productId })
        });

        const result = await response.json();

        if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Added to Cart',
                text: result.message,
                showCancelButton: true,
                confirmButtonText: 'View Cart',
                cancelButtonText: 'Ok'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/cart';
                }
                // If Cancel is clicked, stay on the page
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: result.message
            });
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Please try again.'
        });
    }
}

async function toggleWishlist(productId, element) {
    if (!isUserLoggedIn) {
        Swal.fire({
            icon: 'warning',
            title: 'Not Logged In',
            text: 'Please log in to manage your wishlist.',
            showCancelButton: true,
            confirmButtonText: 'Log In',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/login';
            }
        });
        return;
    }
    try {
        const response = await fetch('/addToWishlist', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json',
              'CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
             },
            body: JSON.stringify({ productId })
        });
        const result = await response.json();

        if (result.status) {
            // Product added to wishlist
            element.innerHTML = '❤️';
            element.classList.remove('not-in-wishlist');
            element.classList.add('in-wishlist');
            
            Swal.fire({
                icon: 'success',
                title: 'Added to Wishlist',
                text: result.message,
                showConfirmButton: false,
                timer: 1500
            });
        } else {
            // Product already in wishlist or removed
            if (result.message.includes('already')) {
                Swal.fire({
                    icon: 'info',
                    title: 'Already in Wishlist',
                    text: result.message,
                    timer: 1500
                });
            } else {
                // If it's a remove operation, update the icon
                element.innerHTML = '🤍';
                element.classList.remove('in-wishlist');
                element.classList.add('not-in-wishlist');
                
                Swal.fire({
                    icon: 'info',
                    title: 'Removed from Wishlist',
                    text: 'Product removed from wishlist',
                    timer: 1500
                });
            }
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Please try again.'
        });
    }
}
</script>

<%- include("../../views/partials/user/footer") %>